//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nazca_Restaurant.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class NazResEntities2 : DbContext
    {
        public NazResEntities2()
            : base("name=NazResEntities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int sp_agregarTipoDeCambio(string fecha, Nullable<decimal> valorCambio)
        {
            var fechaParameter = fecha != null ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(string));
    
            var valorCambioParameter = valorCambio.HasValue ?
                new ObjectParameter("valorCambio", valorCambio) :
                new ObjectParameter("valorCambio", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_agregarTipoDeCambio", fechaParameter, valorCambioParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_aperturarCaja(string fecha, Nullable<decimal> soles, Nullable<decimal> dolares, string usuario)
        {
            var fechaParameter = fecha != null ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(string));
    
            var solesParameter = soles.HasValue ?
                new ObjectParameter("soles", soles) :
                new ObjectParameter("soles", typeof(decimal));
    
            var dolaresParameter = dolares.HasValue ?
                new ObjectParameter("dolares", dolares) :
                new ObjectParameter("dolares", typeof(decimal));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_aperturarCaja", fechaParameter, solesParameter, dolaresParameter, usuarioParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<sp_datosMozo_Result> sp_datosMozo(string codigoMozo)
        {
            var codigoMozoParameter = codigoMozo != null ?
                new ObjectParameter("codigoMozo", codigoMozo) :
                new ObjectParameter("codigoMozo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_datosMozo_Result>("sp_datosMozo", codigoMozoParameter);
        }
    
        public virtual ObjectResult<sp_datosProducto_Result> sp_datosProducto(string codigoProducto)
        {
            var codigoProductoParameter = codigoProducto != null ?
                new ObjectParameter("codigoProducto", codigoProducto) :
                new ObjectParameter("codigoProducto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_datosProducto_Result>("sp_datosProducto", codigoProductoParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_insertarDetalleVenta(Nullable<int> numeroVenta, string codigoProducto, string comentarioProducto, Nullable<short> cantidadProductos, Nullable<short> ordenEnVenta)
        {
            var numeroVentaParameter = numeroVenta.HasValue ?
                new ObjectParameter("numeroVenta", numeroVenta) :
                new ObjectParameter("numeroVenta", typeof(int));
    
            var codigoProductoParameter = codigoProducto != null ?
                new ObjectParameter("codigoProducto", codigoProducto) :
                new ObjectParameter("codigoProducto", typeof(string));
    
            var comentarioProductoParameter = comentarioProducto != null ?
                new ObjectParameter("comentarioProducto", comentarioProducto) :
                new ObjectParameter("comentarioProducto", typeof(string));
    
            var cantidadProductosParameter = cantidadProductos.HasValue ?
                new ObjectParameter("cantidadProductos", cantidadProductos) :
                new ObjectParameter("cantidadProductos", typeof(short));
    
            var ordenEnVentaParameter = ordenEnVenta.HasValue ?
                new ObjectParameter("ordenEnVenta", ordenEnVenta) :
                new ObjectParameter("ordenEnVenta", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertarDetalleVenta", numeroVentaParameter, codigoProductoParameter, comentarioProductoParameter, cantidadProductosParameter, ordenEnVentaParameter);
        }
    
        public virtual int sp_insertarVenta(string codigoMesa, string codigoMozo, string pagoTarjeta, string recibePropina, Nullable<decimal> montoPropina, Nullable<decimal> montoTotal, string formaPago, string codigoUsuario)
        {
            var codigoMesaParameter = codigoMesa != null ?
                new ObjectParameter("codigoMesa", codigoMesa) :
                new ObjectParameter("codigoMesa", typeof(string));
    
            var codigoMozoParameter = codigoMozo != null ?
                new ObjectParameter("codigoMozo", codigoMozo) :
                new ObjectParameter("codigoMozo", typeof(string));
    
            var pagoTarjetaParameter = pagoTarjeta != null ?
                new ObjectParameter("pagoTarjeta", pagoTarjeta) :
                new ObjectParameter("pagoTarjeta", typeof(string));
    
            var recibePropinaParameter = recibePropina != null ?
                new ObjectParameter("recibePropina", recibePropina) :
                new ObjectParameter("recibePropina", typeof(string));
    
            var montoPropinaParameter = montoPropina.HasValue ?
                new ObjectParameter("montoPropina", montoPropina) :
                new ObjectParameter("montoPropina", typeof(decimal));
    
            var montoTotalParameter = montoTotal.HasValue ?
                new ObjectParameter("montoTotal", montoTotal) :
                new ObjectParameter("montoTotal", typeof(decimal));
    
            var formaPagoParameter = formaPago != null ?
                new ObjectParameter("formaPago", formaPago) :
                new ObjectParameter("formaPago", typeof(string));
    
            var codigoUsuarioParameter = codigoUsuario != null ?
                new ObjectParameter("codigoUsuario", codigoUsuario) :
                new ObjectParameter("codigoUsuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertarVenta", codigoMesaParameter, codigoMozoParameter, pagoTarjetaParameter, recibePropinaParameter, montoPropinaParameter, montoTotalParameter, formaPagoParameter, codigoUsuarioParameter);
        }
    
        public virtual ObjectResult<sp_lisarDetalleVenta_Result> sp_lisarDetalleVenta(Nullable<int> codigoVenta)
        {
            var codigoVentaParameter = codigoVenta.HasValue ?
                new ObjectParameter("codigoVenta", codigoVenta) :
                new ObjectParameter("codigoVenta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_lisarDetalleVenta_Result>("sp_lisarDetalleVenta", codigoVentaParameter);
        }
    
        public virtual ObjectResult<sp_listarAperturaCaja_Result> sp_listarAperturaCaja()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_listarAperturaCaja_Result>("sp_listarAperturaCaja");
        }
    
        public virtual ObjectResult<sp_listarDatosVentas_Result> sp_listarDatosVentas(Nullable<int> codigoVenta)
        {
            var codigoVentaParameter = codigoVenta.HasValue ?
                new ObjectParameter("codigoVenta", codigoVenta) :
                new ObjectParameter("codigoVenta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_listarDatosVentas_Result>("sp_listarDatosVentas", codigoVentaParameter);
        }
    
        public virtual ObjectResult<sp_listarEstadoMesa_Result> sp_listarEstadoMesa(string codigoMesa)
        {
            var codigoMesaParameter = codigoMesa != null ?
                new ObjectParameter("codigoMesa", codigoMesa) :
                new ObjectParameter("codigoMesa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_listarEstadoMesa_Result>("sp_listarEstadoMesa", codigoMesaParameter);
        }
    
        public virtual ObjectResult<sp_listarMesas_Result> sp_listarMesas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_listarMesas_Result>("sp_listarMesas");
        }
    
        public virtual ObjectResult<sp_listarMozos_Result> sp_listarMozos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_listarMozos_Result>("sp_listarMozos");
        }
    
        public virtual ObjectResult<sp_listarTiposDeCambio_Result> sp_listarTiposDeCambio()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_listarTiposDeCambio_Result>("sp_listarTiposDeCambio");
        }
    
        public virtual ObjectResult<sp_listarTiposDeProductos_Result> sp_listarTiposDeProductos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_listarTiposDeProductos_Result>("sp_listarTiposDeProductos");
        }
    
        public virtual ObjectResult<sp_login_Result> sp_login(string usuario, string contrasena)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("contrasena", contrasena) :
                new ObjectParameter("contrasena", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_login_Result>("sp_login", usuarioParameter, contrasenaParameter);
        }
    
        public virtual ObjectResult<sp_productosPorTipo_Result> sp_productosPorTipo(string codigoTipo)
        {
            var codigoTipoParameter = codigoTipo != null ?
                new ObjectParameter("codigoTipo", codigoTipo) :
                new ObjectParameter("codigoTipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_productosPorTipo_Result>("sp_productosPorTipo", codigoTipoParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
